apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"    
spec:
  template:
    metadata:
      name: {{ .Values.catalogdb.servicename }}-post-init
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      initContainers:
        - name: check-postgress-ready
          image: {{ .Values.catalogdb.image }}
          command: ['sh', '-c', 
            'until pg_isready -h {{ .Values.catalogdb.servicename }} -p 5432; 
            do echo waiting for database; sleep 2; done;']     
        - name: check-sqlserver-ready
          image: {{ .Values.inventorydb.image }}
          command: ['sh', '-c', 
            'until /opt/mssql-tools/bin/sqlcmd -S {{ .Values.inventorydb.servicename }}  -U sa -P {{ .Values.inventorydb.password }}; 
            do echo waiting for database; sleep 2; done;']              
      containers:              
        - name: postgress-setup
          image: {{ .Values.catalogdb.image }}
          command: ['sh', '-c', 
            'psql -h {{ .Values.catalogdb.servicename }} -U postgres -d {{ .Values.catalogdb.database }} < /opt/app-root/src/data.sql']
          env:
            - name: PGPASSWORD
              value: {{ .Values.catalogdb.password }}            
          volumeMounts:
            - name: postgress-config-volume
              mountPath: /opt/app-root/src
        - name: sql-server-setup
          image: {{ .Values.inventorydb.image }}
          command: ['sh', '-c', 
            '/opt/mssql-tools/bin/sqlcmd -S {{ .Values.inventorydb.servicename }} -U sa -P {{ .Values.inventorydb.password }} -i /opt/app-root/src/data.sql']     
          volumeMounts:
            - name: sqlserver-config-volume
              mountPath: /opt/app-root/src              
      volumes:
        - name: postgress-config-volume
          configMap:
            name: {{ .Values.catalogdb.servicename }}-init-script
            items:
            - key: data.sql
              path: data.sql   
        - name: sqlserver-config-volume
          configMap:
            name: {{ .Values.inventorydb.servicename }}-init-script
            items:
            - key: data.sql
              path: data.sql                        
      restartPolicy: Never
